version: 2
jobs:
  build:
    environment:
    - _JAVA_OPTIONS: -Xmx3g
    - GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2
    docker:
    - image: circleci/mysql:8.0.17
      environment:
        MYSQL_ROOT_PASSWORD: rootpw
        MYSQL_DATABASE: progresee
        MYSQL_USER: root
        MYSQL_PASSWORD: 1234
    steps:
    - checkout
    - restore_cache:
        key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties"
          }}
    - restore_cache:
        key: v1-gradle-cache-{{ checksum "build.gradle" }}
    - run:
        name: Run tests in parallel
        command: |
          cd src/test/java/
          # Get list of classnames of tests that should run on this node
          CLASSNAMES=$(circleci tests glob "**/*.java" \
            | cut -c 1- | sed 's@/@.@g' \
            | sed 's/.\{5\}$//' \
            | circleci tests split --split-by=timings --timings-type=classname)
          cd ../../..
          # Format the arguments to "./gradlew test"
          GRADLE_ARGS=$(echo $CLASSNAMES | awk '{for (i=1; i<=NF; i++) print "--tests",$i}')
          echo "Prepared arguments for Gradle: $GRADLE_ARGS"
          ./gradlew test $GRADLE_ARGS
    - save_cache:
        paths:
        - ~/.gradle/wrapper
        key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties"
          }}
    - save_cache:
        paths:
        - ~/.gradle/caches
        key: v1-gradle-cache-{{ checksum "build.gradle" }}
    - store_test_results:
        path: build/test-results/test
    - store_artifacts:
        path: build/test-results/test
        when: always
    - run:
        name: Assemble JAR
        command: |
          # Skip this for other nodes
          if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
            ./gradlew assemble
          fi
    - store_artifacts:
        path: build/libs
workflows:
  version: 2
  workflow:
    jobs:
    - build